TimeQuest Timing Analyzer report for SomadorFlutuante
Thu Aug 15 18:26:48 2019
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'tmp[0]'
 12. Slow Model Setup: 'KEY[0]'
 13. Slow Model Hold: 'KEY[0]'
 14. Slow Model Hold: 'tmp[0]'
 15. Slow Model Minimum Pulse Width: 'KEY[0]'
 16. Slow Model Minimum Pulse Width: 'tmp[0]'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'tmp[0]'
 27. Fast Model Setup: 'KEY[0]'
 28. Fast Model Hold: 'KEY[0]'
 29. Fast Model Hold: 'tmp[0]'
 30. Fast Model Minimum Pulse Width: 'KEY[0]'
 31. Fast Model Minimum Pulse Width: 'tmp[0]'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; SomadorFlutuante                                                  ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C20F484C7                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                             ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets    ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------+
; KEY[0]     ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { KEY[0] } ;
; tmp[0]     ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { tmp[0] } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------+


+----------------------------------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                                                  ;
+-----------+-----------------+------------+---------------------------------------------------------------+
; Fmax      ; Restricted Fmax ; Clock Name ; Note                                                          ;
+-----------+-----------------+------------+---------------------------------------------------------------+
; 30.75 MHz ; 30.75 MHz       ; tmp[0]     ;                                                               ;
; 759.3 MHz ; 405.02 MHz      ; KEY[0]     ; limit due to minimum period restriction (max I/O toggle rate) ;
+-----------+-----------------+------------+---------------------------------------------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+----------------------------------+
; Slow Model Setup Summary         ;
+--------+---------+---------------+
; Clock  ; Slack   ; End Point TNS ;
+--------+---------+---------------+
; tmp[0] ; -15.758 ; -379.480      ;
; KEY[0] ; -0.317  ; -0.474        ;
+--------+---------+---------------+


+---------------------------------+
; Slow Model Hold Summary         ;
+--------+--------+---------------+
; Clock  ; Slack  ; End Point TNS ;
+--------+--------+---------------+
; KEY[0] ; -3.213 ; -8.331        ;
; tmp[0] ; -1.801 ; -18.661       ;
+--------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+--------+--------+----------------------+
; Clock  ; Slack  ; End Point TNS        ;
+--------+--------+----------------------+
; KEY[0] ; -1.469 ; -5.135               ;
; tmp[0] ; 0.500  ; 0.000                ;
+--------+--------+----------------------+


+-----------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'tmp[0]'                                                                                ;
+---------+-----------+---------------+--------------+-------------+--------------+------------+------------+
; Slack   ; From Node ; To Node       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+---------+-----------+---------------+--------------+-------------+--------------+------------+------------+
; -15.758 ; frac1[1]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.703      ; 15.817     ;
; -15.743 ; frac1[1]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.648      ; 15.472     ;
; -15.709 ; frac1[0]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.543      ; 15.608     ;
; -15.705 ; frac1[1]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.627      ; 15.692     ;
; -15.694 ; frac1[0]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.488      ; 15.263     ;
; -15.656 ; frac1[0]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.467      ; 15.483     ;
; -15.619 ; frac1[1]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.641      ; 15.613     ;
; -15.615 ; frac1[1]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.652      ; 15.581     ;
; -15.605 ; frac1[1]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.664      ; 15.542     ;
; -15.574 ; frac1[1]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.703      ; 15.629     ;
; -15.570 ; frac1[0]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.481      ; 15.404     ;
; -15.566 ; frac1[0]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.492      ; 15.372     ;
; -15.561 ; frac1[1]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.649      ; 15.570     ;
; -15.556 ; frac1[0]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.504      ; 15.333     ;
; -15.548 ; frac1[2]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.544      ; 15.448     ;
; -15.544 ; frac1[1]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.667      ; 15.530     ;
; -15.533 ; frac1[2]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.489      ; 15.103     ;
; -15.525 ; frac1[0]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.543      ; 15.420     ;
; -15.512 ; frac1[0]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.489      ; 15.361     ;
; -15.495 ; frac1[2]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.468      ; 15.323     ;
; -15.495 ; frac1[0]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.507      ; 15.321     ;
; -15.478 ; frac1[3]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.547      ; 15.381     ;
; -15.470 ; frac1[5]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.676      ; 15.502     ;
; -15.463 ; frac1[3]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.492      ; 15.036     ;
; -15.455 ; frac1[5]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.621      ; 15.157     ;
; -15.454 ; frac1[4]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.710      ; 15.520     ;
; -15.439 ; frac1[1]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.654      ; 15.403     ;
; -15.439 ; frac1[4]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.655      ; 15.175     ;
; -15.425 ; frac1[3]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.471      ; 15.256     ;
; -15.424 ; frac1[6]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.676      ; 15.456     ;
; -15.417 ; frac1[5]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.600      ; 15.377     ;
; -15.409 ; frac1[6]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.621      ; 15.111     ;
; -15.409 ; frac1[2]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.482      ; 15.244     ;
; -15.405 ; frac1[2]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.493      ; 15.212     ;
; -15.401 ; frac1[4]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.634      ; 15.395     ;
; -15.398 ; frac1[1]  ; LEDG[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.481      ; 15.341     ;
; -15.395 ; frac1[2]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.505      ; 15.173     ;
; -15.390 ; frac1[0]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.494      ; 15.194     ;
; -15.371 ; frac1[6]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.600      ; 15.331     ;
; -15.367 ; frac1[7]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.676      ; 15.399     ;
; -15.364 ; frac1[2]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.544      ; 15.260     ;
; -15.352 ; frac1[7]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.621      ; 15.054     ;
; -15.351 ; frac1[2]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.490      ; 15.201     ;
; -15.349 ; frac1[0]  ; LEDG[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.321      ; 15.132     ;
; -15.339 ; frac1[3]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.485      ; 15.177     ;
; -15.338 ; frac1[1]  ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.666      ; 15.317     ;
; -15.335 ; frac1[3]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.496      ; 15.145     ;
; -15.334 ; frac1[2]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.508      ; 15.161     ;
; -15.334 ; frac2[1]  ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.827      ; 15.453     ;
; -15.331 ; frac1[5]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.614      ; 15.298     ;
; -15.327 ; frac1[5]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.625      ; 15.266     ;
; -15.325 ; frac1[3]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.508      ; 15.106     ;
; -15.319 ; frac2[0]  ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.828      ; 15.439     ;
; -15.317 ; frac1[5]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.637      ; 15.227     ;
; -15.315 ; frac1[4]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.648      ; 15.316     ;
; -15.314 ; frac1[7]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.600      ; 15.274     ;
; -15.312 ; frac1[1]  ; LEDG[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.651      ; 15.319     ;
; -15.311 ; frac1[4]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.659      ; 15.284     ;
; -15.301 ; frac1[4]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.671      ; 15.245     ;
; -15.294 ; frac1[3]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.547      ; 15.193     ;
; -15.293 ; frac1[1]  ; thex2[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.673      ; 15.323     ;
; -15.289 ; frac1[0]  ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.506      ; 15.108     ;
; -15.286 ; frac1[5]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.676      ; 15.314     ;
; -15.285 ; frac1[6]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.614      ; 15.252     ;
; -15.283 ; frac2[5]  ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.836      ; 15.411     ;
; -15.281 ; frac1[6]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.625      ; 15.220     ;
; -15.281 ; frac1[3]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.493      ; 15.134     ;
; -15.273 ; frac1[5]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.622      ; 15.255     ;
; -15.271 ; frac1[6]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.637      ; 15.181     ;
; -15.270 ; frac1[4]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.710      ; 15.332     ;
; -15.264 ; frac1[3]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.511      ; 15.094     ;
; -15.263 ; frac1[0]  ; LEDG[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.491      ; 15.110     ;
; -15.257 ; frac1[4]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.656      ; 15.273     ;
; -15.256 ; frac1[5]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.640      ; 15.215     ;
; -15.244 ; frac1[0]  ; thex2[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.513      ; 15.114     ;
; -15.240 ; frac1[6]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.676      ; 15.268     ;
; -15.240 ; frac1[4]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.674      ; 15.233     ;
; -15.233 ; frac2[1]  ; thex0[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.828      ; 15.420     ;
; -15.229 ; frac1[2]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.495      ; 15.034     ;
; -15.228 ; frac1[7]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.614      ; 15.195     ;
; -15.227 ; frac1[6]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.622      ; 15.209     ;
; -15.224 ; frac1[7]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.625      ; 15.163     ;
; -15.218 ; frac2[0]  ; thex0[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.829      ; 15.406     ;
; -15.214 ; frac1[7]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.637      ; 15.124     ;
; -15.210 ; frac1[1]  ; thex2[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.702      ; 15.264     ;
; -15.210 ; frac1[6]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.640      ; 15.169     ;
; -15.207 ; frac2[2]  ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.828      ; 15.327     ;
; -15.188 ; frac1[2]  ; LEDG[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.322      ; 14.972     ;
; -15.183 ; frac1[7]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.676      ; 15.211     ;
; -15.182 ; frac2[5]  ; thex0[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.837      ; 15.378     ;
; -15.170 ; frac1[7]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.622      ; 15.152     ;
; -15.161 ; frac1[0]  ; thex2[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.542      ; 15.055     ;
; -15.159 ; frac1[3]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.498      ; 14.967     ;
; -15.159 ; frac1[1]  ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 1.000        ; 0.787      ; 15.738     ;
; -15.155 ; frac1[1]  ; LEDG[4]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.491      ; 15.146     ;
; -15.155 ; frac1[1]  ; LEDG[7]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.480      ; 15.130     ;
; -15.153 ; frac1[7]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.640      ; 15.112     ;
; -15.151 ; frac1[5]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.627      ; 15.088     ;
; -15.138 ; frac2[1]  ; thex0[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.827      ; 15.324     ;
; -15.135 ; frac1[4]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.661      ; 15.106     ;
+---------+-----------+---------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'KEY[0]'                                                                         ;
+--------+-----------+---------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+-------------+--------------+------------+------------+
; -0.317 ; tmp[2]    ; tmp[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 1.355      ;
; -0.162 ; tmp[1]    ; tmp[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 1.200      ;
; -0.157 ; tmp[1]    ; tmp[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 1.195      ;
; 0.042  ; tmp[2]    ; tmp[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 0.996      ;
; 0.307  ; tmp[2]    ; tmp[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 0.731      ;
; 0.307  ; tmp[1]    ; tmp[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 0.731      ;
; 2.809  ; tmp[0]    ; tmp[2]  ; tmp[0]       ; KEY[0]      ; 0.500        ; 3.381      ; 1.387      ;
; 2.813  ; tmp[0]    ; tmp[1]  ; tmp[0]       ; KEY[0]      ; 0.500        ; 3.381      ; 1.383      ;
; 3.309  ; tmp[0]    ; tmp[2]  ; tmp[0]       ; KEY[0]      ; 1.000        ; 3.381      ; 1.387      ;
; 3.313  ; tmp[0]    ; tmp[1]  ; tmp[0]       ; KEY[0]      ; 1.000        ; 3.381      ; 1.383      ;
; 3.465  ; tmp[0]    ; tmp[0]  ; tmp[0]       ; KEY[0]      ; 0.500        ; 3.381      ; 0.731      ;
; 3.965  ; tmp[0]    ; tmp[0]  ; tmp[0]       ; KEY[0]      ; 1.000        ; 3.381      ; 0.731      ;
+--------+-----------+---------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'KEY[0]'                                                                          ;
+--------+-----------+---------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+-------------+--------------+------------+------------+
; -3.213 ; tmp[0]    ; tmp[0]  ; tmp[0]       ; KEY[0]      ; 0.000        ; 3.381      ; 0.731      ;
; -2.713 ; tmp[0]    ; tmp[0]  ; tmp[0]       ; KEY[0]      ; -0.500       ; 3.381      ; 0.731      ;
; -2.561 ; tmp[0]    ; tmp[1]  ; tmp[0]       ; KEY[0]      ; 0.000        ; 3.381      ; 1.383      ;
; -2.557 ; tmp[0]    ; tmp[2]  ; tmp[0]       ; KEY[0]      ; 0.000        ; 3.381      ; 1.387      ;
; -2.061 ; tmp[0]    ; tmp[1]  ; tmp[0]       ; KEY[0]      ; -0.500       ; 3.381      ; 1.383      ;
; -2.057 ; tmp[0]    ; tmp[2]  ; tmp[0]       ; KEY[0]      ; -0.500       ; 3.381      ; 1.387      ;
; 0.445  ; tmp[1]    ; tmp[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.731      ;
; 0.445  ; tmp[2]    ; tmp[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.731      ;
; 0.710  ; tmp[2]    ; tmp[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.996      ;
; 0.909  ; tmp[1]    ; tmp[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.195      ;
; 0.914  ; tmp[1]    ; tmp[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.200      ;
; 1.069  ; tmp[2]    ; tmp[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.355      ;
+--------+-----------+---------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'tmp[0]'                                                                                ;
+--------+-----------+---------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------------+--------------+-------------+--------------+------------+------------+
; -1.801 ; tmp[0]    ; thex0[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.697      ; 3.173      ;
; -1.799 ; tmp[0]    ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.697      ; 3.175      ;
; -1.798 ; tmp[0]    ; thex0[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.696      ; 3.175      ;
; -1.784 ; tmp[0]    ; thex0[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.698      ; 3.191      ;
; -1.730 ; tmp[0]    ; sign_show     ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.590      ; 3.137      ;
; -1.554 ; tmp[0]    ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.577      ; 3.300      ;
; -1.301 ; tmp[0]    ; thex2[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.612      ; 3.588      ;
; -1.301 ; tmp[0]    ; thex0[2]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.697      ; 3.173      ;
; -1.300 ; tmp[0]    ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.613      ; 3.590      ;
; -1.299 ; tmp[0]    ; thex0[3]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.697      ; 3.175      ;
; -1.298 ; tmp[0]    ; thex0[1]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.696      ; 3.175      ;
; -1.284 ; tmp[0]    ; thex0[0]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.698      ; 3.191      ;
; -1.233 ; tmp[0]    ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.613      ; 3.657      ;
; -1.230 ; tmp[0]    ; sign_show     ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.590      ; 3.137      ;
; -1.189 ; tmp[0]    ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.574      ; 3.662      ;
; -1.105 ; tmp[0]    ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.576      ; 3.748      ;
; -1.095 ; tmp[0]    ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.564      ; 3.746      ;
; -1.054 ; tmp[0]    ; thex1[3]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.577      ; 3.300      ;
; -0.972 ; tmp[0]    ; thex2[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 4.583      ; 3.888      ;
; -0.801 ; tmp[0]    ; thex2[0]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.612      ; 3.588      ;
; -0.800 ; tmp[0]    ; thex1[2]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.613      ; 3.590      ;
; -0.733 ; tmp[0]    ; thex2[2]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.613      ; 3.657      ;
; -0.689 ; tmp[0]    ; thex1[1]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.574      ; 3.662      ;
; -0.605 ; tmp[0]    ; thex1[0]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.576      ; 3.748      ;
; -0.595 ; tmp[0]    ; thex2[3]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.564      ; 3.746      ;
; -0.472 ; tmp[0]    ; thex2[1]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 4.583      ; 3.888      ;
; 0.865  ; tmp[2]    ; LEDR[0]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.178      ; 2.043      ;
; 0.871  ; tmp[2]    ; LEDR[3]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.181      ; 2.052      ;
; 0.873  ; tmp[2]    ; LEDG[0]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.180      ; 2.053      ;
; 1.072  ; tmp[2]    ; LEDR[1]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.170      ; 2.242      ;
; 1.078  ; tmp[2]    ; LEDR[2]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.170      ; 2.248      ;
; 1.149  ; frac2[5]  ; thex2[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.722      ; 1.871      ;
; 1.216  ; tmp[2]    ; LEDG[1]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.179      ; 2.395      ;
; 1.317  ; sign1     ; sign_show     ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.764      ; 2.081      ;
; 1.390  ; tmp[2]    ; LEDR[4]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.006      ; 2.396      ;
; 1.392  ; tmp[2]    ; LEDG[2]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.156      ; 2.548      ;
; 1.455  ; tmp[2]    ; LEDG[6]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.177      ; 2.632      ;
; 1.525  ; frac2[4]  ; thex2[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.758      ; 2.283      ;
; 1.527  ; frac2[7]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.702      ; 2.229      ;
; 1.531  ; frac2[1]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.704      ; 2.235      ;
; 1.590  ; frac2[2]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.744      ; 2.334      ;
; 1.590  ; tmp[2]    ; thex0[1]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 1.315      ; 2.405      ;
; 1.622  ; tmp[2]    ; thex0[3]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 1.316      ; 2.438      ;
; 1.647  ; frac2[0]  ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.707      ; 2.354      ;
; 1.673  ; tmp[2]    ; LEDG[5]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.021      ; 2.694      ;
; 1.677  ; tmp[2]    ; LEDG[4]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.020      ; 2.697      ;
; 1.690  ; sign1     ; LEDR[4]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.561      ; 2.251      ;
; 1.690  ; tmp[2]    ; sign_show     ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.209      ; 2.899      ;
; 1.699  ; tmp[2]    ; thex0[0]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 1.317      ; 2.516      ;
; 1.701  ; frac2[3]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.706      ; 2.407      ;
; 1.755  ; tmp[2]    ; LEDG[3]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.010      ; 2.765      ;
; 1.788  ; tmp[2]    ; LEDG[7]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.009      ; 2.797      ;
; 1.790  ; tmp[1]    ; sign_show     ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.209      ; 2.999      ;
; 1.856  ; tmp[2]    ; thex1[3]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.196      ; 3.052      ;
; 1.869  ; exp2[3]   ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.757      ; 2.626      ;
; 1.897  ; exp2[0]   ; thex0[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.779      ; 2.676      ;
; 1.913  ; tmp[2]    ; thex0[2]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 1.316      ; 2.729      ;
; 1.939  ; exp2[1]   ; thex0[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.754      ; 2.693      ;
; 2.104  ; tmp[2]    ; thex1[2]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.232      ; 3.336      ;
; 2.109  ; tmp[2]    ; thex2[0]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.231      ; 3.340      ;
; 2.110  ; tmp[1]    ; thex0[2]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 1.316      ; 2.926      ;
; 2.112  ; tmp[1]    ; thex0[3]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 1.316      ; 2.928      ;
; 2.113  ; tmp[1]    ; thex0[1]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 1.315      ; 2.928      ;
; 2.127  ; tmp[1]    ; thex0[0]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 1.317      ; 2.944      ;
; 2.160  ; tmp[1]    ; thex1[3]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.196      ; 3.356      ;
; 2.163  ; frac2[6]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.741      ; 2.904      ;
; 2.177  ; tmp[2]    ; thex2[2]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.232      ; 3.409      ;
; 2.180  ; tmp[2]    ; thex2[3]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.183      ; 3.363      ;
; 2.221  ; tmp[2]    ; thex1[1]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.193      ; 3.414      ;
; 2.232  ; tmp[1]    ; thex1[2]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.232      ; 3.464      ;
; 2.245  ; exp1[1]   ; thex0[1]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.875      ; 2.620      ;
; 2.305  ; tmp[2]    ; thex1[0]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.195      ; 3.500      ;
; 2.308  ; tmp[1]    ; thex2[3]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.183      ; 3.491      ;
; 2.317  ; tmp[2]    ; thex2[1]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.202      ; 3.519      ;
; 2.343  ; sign2     ; sign_show     ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.667      ; 2.510      ;
; 2.413  ; tmp[1]    ; thex2[0]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.231      ; 3.644      ;
; 2.440  ; tmp[1]    ; thex2[1]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.202      ; 3.642      ;
; 2.481  ; tmp[1]    ; thex2[2]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.232      ; 3.713      ;
; 2.525  ; tmp[1]    ; thex1[1]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.193      ; 3.718      ;
; 2.561  ; tmp[1]    ; thex1[0]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 1.195      ; 3.756      ;
; 2.660  ; sign1     ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.732      ; 3.392      ;
; 2.662  ; sign2     ; LEDR[4]$latch ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.464      ; 2.626      ;
; 2.680  ; frac1[7]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.627      ; 2.807      ;
; 2.707  ; exp1[3]   ; thex0[3]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.708      ; 2.915      ;
; 2.730  ; exp1[0]   ; thex0[0]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.708      ; 2.938      ;
; 2.753  ; exp2[2]   ; thex0[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.756      ; 3.509      ;
; 2.968  ; frac1[4]  ; thex2[0]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.709      ; 3.177      ;
; 2.993  ; exp2[3]   ; LEDR[4]$latch ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.447      ; 2.940      ;
; 2.998  ; exp1[1]   ; LEDR[1]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.730      ; 3.728      ;
; 3.006  ; sign2     ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.635      ; 3.141      ;
; 3.008  ; frac1[5]  ; thex2[1]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.646      ; 3.154      ;
; 3.092  ; frac1[6]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.676      ; 3.268      ;
; 3.108  ; sign1     ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.750      ; 3.858      ;
; 3.116  ; sign1     ; thex2[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.757      ; 3.873      ;
; 3.125  ; sign1     ; LEDG[0]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.735      ; 3.860      ;
; 3.127  ; exp1[3]   ; LEDR[4]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.398      ; 3.525      ;
; 3.185  ; exp1[2]   ; thex0[2]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.863      ; 3.548      ;
; 3.228  ; sign2     ; thex0[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.775      ; 4.003      ;
; 3.232  ; exp1[1]   ; LEDR[4]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.566      ; 3.798      ;
; 3.268  ; sign1     ; thex2[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.786      ; 4.054      ;
+--------+-----------+---------------+--------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'KEY[0]'                                                         ;
+--------+--------------+----------------+------------------+--------+------------+----------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target         ;
+--------+--------------+----------------+------------------+--------+------------+----------------+
; -1.469 ; 1.000        ; 2.469          ; Port Rate        ; KEY[0] ; Rise       ; KEY[0]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[0]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[0]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[1]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[1]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[2]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[2]         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; KEY[0] ; Rise       ; KEY[0]|combout ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; KEY[0]|combout ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[0]|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[0]|clk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[1]|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[1]|clk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[2]|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[2]|clk     ;
+--------+--------------+----------------+------------------+--------+------------+----------------+


+----------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'tmp[0]'                                                                 ;
+-------+--------------+----------------+------------------+--------+------------+-------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target                  ;
+-------+--------------+----------------+------------------+--------+------------+-------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[3]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[3]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[3]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[3]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[4]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[4]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[4]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[4]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[5]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[5]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[5]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[5]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[6]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[6]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[6]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[6]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[7]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[7]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[7]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[7]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[3]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[3]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[3]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[3]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[4]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[4]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[4]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[4]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux37~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux37~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux37~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux37~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux37~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux37~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux37~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux37~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux48~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux48~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux48~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux48~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux48~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux48~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux48~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux48~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~2clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~2clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~2clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~2clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~2|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~2|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~3clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~3clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~3clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~3clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~3|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~3|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~3|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~3|datac           ;
+-------+--------------+----------------+------------------+--------+------------+-------------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; tmp[0]     ; 2.473  ; 2.473  ; Rise       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 2.113  ; 2.113  ; Rise       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 2.150  ; 2.150  ; Rise       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 2.473  ; 2.473  ; Rise       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 1.820  ; 1.820  ; Rise       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; 1.255  ; 1.255  ; Rise       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 1.405  ; 1.405  ; Rise       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; 1.592  ; 1.592  ; Rise       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; 0.879  ; 0.879  ; Rise       ; tmp[0]          ;
; SW[*]     ; tmp[0]     ; 1.088  ; 1.088  ; Fall       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 0.986  ; 0.986  ; Fall       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 0.957  ; 0.957  ; Fall       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 1.088  ; 1.088  ; Fall       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 0.359  ; 0.359  ; Fall       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; 0.223  ; 0.223  ; Fall       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 0.230  ; 0.230  ; Fall       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; -0.009 ; -0.009 ; Fall       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; 0.031  ; 0.031  ; Fall       ; tmp[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; tmp[0]     ; 1.345  ; 1.345  ; Rise       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; -0.002 ; -0.002 ; Rise       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 0.694  ; 0.694  ; Rise       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; -0.120 ; -0.120 ; Rise       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 1.275  ; 1.275  ; Rise       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; 1.345  ; 1.345  ; Rise       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 0.945  ; 0.945  ; Rise       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; 1.074  ; 1.074  ; Rise       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; 0.731  ; 0.731  ; Rise       ; tmp[0]          ;
; SW[*]     ; tmp[0]     ; 1.336  ; 1.336  ; Fall       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 0.178  ; 0.178  ; Fall       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 0.574  ; 0.574  ; Fall       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 0.260  ; 0.260  ; Fall       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 1.336  ; 1.336  ; Fall       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; 0.803  ; 0.803  ; Fall       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 0.781  ; 0.781  ; Fall       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; 1.070  ; 1.070  ; Fall       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; 0.802  ; 0.802  ; Fall       ; tmp[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Clock to Output Times                                                   ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX1[*]   ; tmp[0]     ; 12.401 ; 12.401 ; Rise       ; tmp[0]          ;
;  HEX1[0]  ; tmp[0]     ; 12.372 ; 12.372 ; Rise       ; tmp[0]          ;
;  HEX1[1]  ; tmp[0]     ; 12.367 ; 12.367 ; Rise       ; tmp[0]          ;
;  HEX1[2]  ; tmp[0]     ; 12.364 ; 12.364 ; Rise       ; tmp[0]          ;
;  HEX1[3]  ; tmp[0]     ; 12.172 ; 12.172 ; Rise       ; tmp[0]          ;
;  HEX1[4]  ; tmp[0]     ; 12.386 ; 12.386 ; Rise       ; tmp[0]          ;
;  HEX1[5]  ; tmp[0]     ; 11.362 ; 11.362 ; Rise       ; tmp[0]          ;
;  HEX1[6]  ; tmp[0]     ; 12.401 ; 12.401 ; Rise       ; tmp[0]          ;
; HEX2[*]   ; tmp[0]     ; 13.491 ; 13.491 ; Rise       ; tmp[0]          ;
;  HEX2[0]  ; tmp[0]     ; 12.730 ; 12.730 ; Rise       ; tmp[0]          ;
;  HEX2[1]  ; tmp[0]     ; 12.728 ; 12.728 ; Rise       ; tmp[0]          ;
;  HEX2[2]  ; tmp[0]     ; 13.096 ; 13.096 ; Rise       ; tmp[0]          ;
;  HEX2[3]  ; tmp[0]     ; 13.131 ; 13.131 ; Rise       ; tmp[0]          ;
;  HEX2[4]  ; tmp[0]     ; 13.491 ; 13.491 ; Rise       ; tmp[0]          ;
;  HEX2[5]  ; tmp[0]     ; 13.170 ; 13.170 ; Rise       ; tmp[0]          ;
;  HEX2[6]  ; tmp[0]     ; 11.981 ; 11.981 ; Rise       ; tmp[0]          ;
; HEX3[*]   ; tmp[0]     ; 11.447 ; 11.447 ; Rise       ; tmp[0]          ;
;  HEX3[6]  ; tmp[0]     ; 11.447 ; 11.447 ; Rise       ; tmp[0]          ;
; LEDG[*]   ; tmp[0]     ; 10.868 ; 10.868 ; Rise       ; tmp[0]          ;
;  LEDG[0]  ; tmp[0]     ; 9.666  ; 9.666  ; Rise       ; tmp[0]          ;
;  LEDG[1]  ; tmp[0]     ; 9.937  ; 9.937  ; Rise       ; tmp[0]          ;
;  LEDG[2]  ; tmp[0]     ; 10.507 ; 10.507 ; Rise       ; tmp[0]          ;
;  LEDG[3]  ; tmp[0]     ; 9.888  ; 9.888  ; Rise       ; tmp[0]          ;
;  LEDG[4]  ; tmp[0]     ; 10.868 ; 10.868 ; Rise       ; tmp[0]          ;
;  LEDG[5]  ; tmp[0]     ; 9.851  ; 9.851  ; Rise       ; tmp[0]          ;
;  LEDG[6]  ; tmp[0]     ; 10.519 ; 10.519 ; Rise       ; tmp[0]          ;
;  LEDG[7]  ; tmp[0]     ; 10.673 ; 10.673 ; Rise       ; tmp[0]          ;
; LEDR[*]   ; tmp[0]     ; 10.845 ; 10.845 ; Rise       ; tmp[0]          ;
;  LEDR[0]  ; tmp[0]     ; 10.514 ; 10.514 ; Rise       ; tmp[0]          ;
;  LEDR[1]  ; tmp[0]     ; 10.428 ; 10.428 ; Rise       ; tmp[0]          ;
;  LEDR[2]  ; tmp[0]     ; 10.845 ; 10.845 ; Rise       ; tmp[0]          ;
;  LEDR[3]  ; tmp[0]     ; 10.023 ; 10.023 ; Rise       ; tmp[0]          ;
;  LEDR[4]  ; tmp[0]     ; 10.551 ; 10.551 ; Rise       ; tmp[0]          ;
; HEX0[*]   ; tmp[0]     ; 12.892 ; 12.892 ; Fall       ; tmp[0]          ;
;  HEX0[0]  ; tmp[0]     ; 11.361 ; 11.361 ; Fall       ; tmp[0]          ;
;  HEX0[1]  ; tmp[0]     ; 12.478 ; 12.478 ; Fall       ; tmp[0]          ;
;  HEX0[2]  ; tmp[0]     ; 12.276 ; 12.276 ; Fall       ; tmp[0]          ;
;  HEX0[3]  ; tmp[0]     ; 12.892 ; 12.892 ; Fall       ; tmp[0]          ;
;  HEX0[4]  ; tmp[0]     ; 12.745 ; 12.745 ; Fall       ; tmp[0]          ;
;  HEX0[5]  ; tmp[0]     ; 12.386 ; 12.386 ; Fall       ; tmp[0]          ;
;  HEX0[6]  ; tmp[0]     ; 12.551 ; 12.551 ; Fall       ; tmp[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Minimum Clock to Output Times                                           ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX1[*]   ; tmp[0]     ; 10.569 ; 10.569 ; Rise       ; tmp[0]          ;
;  HEX1[0]  ; tmp[0]     ; 11.587 ; 11.587 ; Rise       ; tmp[0]          ;
;  HEX1[1]  ; tmp[0]     ; 11.584 ; 11.584 ; Rise       ; tmp[0]          ;
;  HEX1[2]  ; tmp[0]     ; 11.597 ; 11.597 ; Rise       ; tmp[0]          ;
;  HEX1[3]  ; tmp[0]     ; 11.382 ; 11.382 ; Rise       ; tmp[0]          ;
;  HEX1[4]  ; tmp[0]     ; 11.593 ; 11.593 ; Rise       ; tmp[0]          ;
;  HEX1[5]  ; tmp[0]     ; 10.569 ; 10.569 ; Rise       ; tmp[0]          ;
;  HEX1[6]  ; tmp[0]     ; 11.607 ; 11.607 ; Rise       ; tmp[0]          ;
; HEX2[*]   ; tmp[0]     ; 11.293 ; 11.293 ; Rise       ; tmp[0]          ;
;  HEX2[0]  ; tmp[0]     ; 12.043 ; 12.043 ; Rise       ; tmp[0]          ;
;  HEX2[1]  ; tmp[0]     ; 12.044 ; 12.044 ; Rise       ; tmp[0]          ;
;  HEX2[2]  ; tmp[0]     ; 12.416 ; 12.416 ; Rise       ; tmp[0]          ;
;  HEX2[3]  ; tmp[0]     ; 12.447 ; 12.447 ; Rise       ; tmp[0]          ;
;  HEX2[4]  ; tmp[0]     ; 12.803 ; 12.803 ; Rise       ; tmp[0]          ;
;  HEX2[5]  ; tmp[0]     ; 12.483 ; 12.483 ; Rise       ; tmp[0]          ;
;  HEX2[6]  ; tmp[0]     ; 11.293 ; 11.293 ; Rise       ; tmp[0]          ;
; HEX3[*]   ; tmp[0]     ; 11.447 ; 11.447 ; Rise       ; tmp[0]          ;
;  HEX3[6]  ; tmp[0]     ; 11.447 ; 11.447 ; Rise       ; tmp[0]          ;
; LEDG[*]   ; tmp[0]     ; 9.666  ; 9.666  ; Rise       ; tmp[0]          ;
;  LEDG[0]  ; tmp[0]     ; 9.666  ; 9.666  ; Rise       ; tmp[0]          ;
;  LEDG[1]  ; tmp[0]     ; 9.937  ; 9.937  ; Rise       ; tmp[0]          ;
;  LEDG[2]  ; tmp[0]     ; 10.507 ; 10.507 ; Rise       ; tmp[0]          ;
;  LEDG[3]  ; tmp[0]     ; 9.888  ; 9.888  ; Rise       ; tmp[0]          ;
;  LEDG[4]  ; tmp[0]     ; 10.868 ; 10.868 ; Rise       ; tmp[0]          ;
;  LEDG[5]  ; tmp[0]     ; 9.851  ; 9.851  ; Rise       ; tmp[0]          ;
;  LEDG[6]  ; tmp[0]     ; 10.519 ; 10.519 ; Rise       ; tmp[0]          ;
;  LEDG[7]  ; tmp[0]     ; 10.673 ; 10.673 ; Rise       ; tmp[0]          ;
; LEDR[*]   ; tmp[0]     ; 10.023 ; 10.023 ; Rise       ; tmp[0]          ;
;  LEDR[0]  ; tmp[0]     ; 10.514 ; 10.514 ; Rise       ; tmp[0]          ;
;  LEDR[1]  ; tmp[0]     ; 10.428 ; 10.428 ; Rise       ; tmp[0]          ;
;  LEDR[2]  ; tmp[0]     ; 10.845 ; 10.845 ; Rise       ; tmp[0]          ;
;  LEDR[3]  ; tmp[0]     ; 10.023 ; 10.023 ; Rise       ; tmp[0]          ;
;  LEDR[4]  ; tmp[0]     ; 10.551 ; 10.551 ; Rise       ; tmp[0]          ;
; HEX0[*]   ; tmp[0]     ; 10.210 ; 10.210 ; Fall       ; tmp[0]          ;
;  HEX0[0]  ; tmp[0]     ; 10.210 ; 10.210 ; Fall       ; tmp[0]          ;
;  HEX0[1]  ; tmp[0]     ; 11.333 ; 11.333 ; Fall       ; tmp[0]          ;
;  HEX0[2]  ; tmp[0]     ; 11.161 ; 11.161 ; Fall       ; tmp[0]          ;
;  HEX0[3]  ; tmp[0]     ; 11.747 ; 11.747 ; Fall       ; tmp[0]          ;
;  HEX0[4]  ; tmp[0]     ; 11.600 ; 11.600 ; Fall       ; tmp[0]          ;
;  HEX0[5]  ; tmp[0]     ; 11.236 ; 11.236 ; Fall       ; tmp[0]          ;
;  HEX0[6]  ; tmp[0]     ; 11.405 ; 11.405 ; Fall       ; tmp[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+---------------------------------+
; Fast Model Setup Summary        ;
+--------+--------+---------------+
; Clock  ; Slack  ; End Point TNS ;
+--------+--------+---------------+
; tmp[0] ; -5.390 ; -128.841      ;
; KEY[0] ; 0.466  ; 0.000         ;
+--------+--------+---------------+


+---------------------------------+
; Fast Model Hold Summary         ;
+--------+--------+---------------+
; Clock  ; Slack  ; End Point TNS ;
+--------+--------+---------------+
; KEY[0] ; -1.540 ; -4.183        ;
; tmp[0] ; -1.326 ; -15.239       ;
+--------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+--------+--------+----------------------+
; Clock  ; Slack  ; End Point TNS        ;
+--------+--------+----------------------+
; KEY[0] ; -1.222 ; -4.222               ;
; tmp[0] ; 0.500  ; 0.000                ;
+--------+--------+----------------------+


+----------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'tmp[0]'                                                                               ;
+--------+-----------+---------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------------+--------------+-------------+--------------+------------+------------+
; -5.390 ; frac1[1]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.277      ; 5.682      ;
; -5.381 ; frac1[1]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.306      ; 5.798      ;
; -5.364 ; frac1[0]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.226      ; 5.605      ;
; -5.355 ; frac1[0]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.255      ; 5.721      ;
; -5.352 ; frac1[1]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.271      ; 5.733      ;
; -5.352 ; frac1[1]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.265      ; 5.730      ;
; -5.330 ; frac1[1]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.281      ; 5.684      ;
; -5.329 ; frac1[1]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.280      ; 5.709      ;
; -5.326 ; frac1[0]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.220      ; 5.656      ;
; -5.326 ; frac1[0]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.214      ; 5.653      ;
; -5.311 ; frac1[1]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.277      ; 5.701      ;
; -5.304 ; frac1[0]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.230      ; 5.607      ;
; -5.303 ; frac1[0]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.229      ; 5.632      ;
; -5.293 ; frac1[1]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.307      ; 5.710      ;
; -5.288 ; frac1[2]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.228      ; 5.531      ;
; -5.285 ; frac1[0]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.226      ; 5.624      ;
; -5.283 ; frac1[1]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.284      ; 5.670      ;
; -5.279 ; frac1[2]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.257      ; 5.647      ;
; -5.278 ; frac1[5]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.262      ; 5.555      ;
; -5.274 ; frac1[1]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.272      ; 5.644      ;
; -5.269 ; frac1[5]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.291      ; 5.671      ;
; -5.267 ; frac1[0]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.256      ; 5.633      ;
; -5.261 ; frac1[3]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.228      ; 5.504      ;
; -5.257 ; frac1[0]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.233      ; 5.593      ;
; -5.252 ; frac1[3]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.257      ; 5.620      ;
; -5.250 ; frac1[2]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.222      ; 5.582      ;
; -5.250 ; frac1[2]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.216      ; 5.579      ;
; -5.248 ; frac1[0]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.221      ; 5.567      ;
; -5.247 ; frac1[4]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.285      ; 5.547      ;
; -5.242 ; frac1[6]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.262      ; 5.519      ;
; -5.240 ; frac1[5]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.256      ; 5.606      ;
; -5.240 ; frac1[5]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.250      ; 5.603      ;
; -5.238 ; frac1[4]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.314      ; 5.663      ;
; -5.233 ; frac1[1]  ; LEDG[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.218      ; 5.594      ;
; -5.233 ; frac1[6]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.291      ; 5.635      ;
; -5.231 ; frac1[1]  ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.280      ; 5.611      ;
; -5.228 ; frac1[2]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.232      ; 5.533      ;
; -5.227 ; frac1[2]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.231      ; 5.558      ;
; -5.223 ; frac1[3]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.222      ; 5.555      ;
; -5.223 ; frac1[3]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.216      ; 5.552      ;
; -5.222 ; frac1[1]  ; LEDG[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.279      ; 5.612      ;
; -5.218 ; frac1[5]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.266      ; 5.557      ;
; -5.217 ; frac1[5]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.265      ; 5.582      ;
; -5.214 ; frac1[1]  ; thex2[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.305      ; 5.628      ;
; -5.209 ; frac1[4]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.279      ; 5.598      ;
; -5.209 ; frac1[4]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.273      ; 5.595      ;
; -5.209 ; frac1[2]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.228      ; 5.550      ;
; -5.207 ; frac1[7]  ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.262      ; 5.484      ;
; -5.207 ; frac1[0]  ; LEDG[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.167      ; 5.517      ;
; -5.206 ; frac1[1]  ; thex2[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.288      ; 5.606      ;
; -5.205 ; frac1[0]  ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.229      ; 5.534      ;
; -5.204 ; frac1[6]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.256      ; 5.570      ;
; -5.204 ; frac1[6]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.250      ; 5.567      ;
; -5.201 ; frac1[3]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.232      ; 5.506      ;
; -5.200 ; frac1[3]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.231      ; 5.531      ;
; -5.199 ; frac1[5]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.262      ; 5.574      ;
; -5.198 ; frac1[7]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.291      ; 5.600      ;
; -5.196 ; frac1[0]  ; LEDG[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.228      ; 5.535      ;
; -5.191 ; frac1[2]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.258      ; 5.559      ;
; -5.188 ; frac1[0]  ; thex2[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.254      ; 5.551      ;
; -5.187 ; frac1[4]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.289      ; 5.549      ;
; -5.186 ; frac1[4]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.288      ; 5.574      ;
; -5.182 ; frac1[6]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.266      ; 5.521      ;
; -5.182 ; frac1[3]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.228      ; 5.523      ;
; -5.181 ; frac1[6]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.265      ; 5.546      ;
; -5.181 ; frac1[5]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.292      ; 5.583      ;
; -5.181 ; frac1[2]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.235      ; 5.519      ;
; -5.180 ; frac1[1]  ; LEDG[7]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.218      ; 5.550      ;
; -5.180 ; frac1[0]  ; thex2[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.237      ; 5.529      ;
; -5.177 ; frac2[0]  ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.403      ; 5.665      ;
; -5.172 ; frac1[2]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.223      ; 5.493      ;
; -5.171 ; frac1[5]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.269      ; 5.543      ;
; -5.169 ; frac1[7]  ; LEDR[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.256      ; 5.535      ;
; -5.169 ; frac1[7]  ; LEDG[2]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.250      ; 5.532      ;
; -5.168 ; frac1[4]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.285      ; 5.566      ;
; -5.165 ; frac1[1]  ; LEDG[4]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.223      ; 5.542      ;
; -5.164 ; frac1[3]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.258      ; 5.532      ;
; -5.163 ; frac1[6]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.262      ; 5.538      ;
; -5.163 ; frac2[1]  ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.402      ; 5.650      ;
; -5.162 ; frac1[5]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.257      ; 5.517      ;
; -5.154 ; frac1[3]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.235      ; 5.492      ;
; -5.154 ; frac1[0]  ; LEDG[7]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.167      ; 5.473      ;
; -5.150 ; frac1[4]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.315      ; 5.575      ;
; -5.147 ; frac1[7]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.266      ; 5.486      ;
; -5.146 ; frac1[7]  ; LEDR[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.265      ; 5.511      ;
; -5.145 ; frac1[6]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.292      ; 5.547      ;
; -5.145 ; frac1[3]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.223      ; 5.466      ;
; -5.140 ; frac1[4]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.292      ; 5.535      ;
; -5.139 ; frac1[0]  ; LEDG[4]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.172      ; 5.465      ;
; -5.135 ; frac1[6]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.269      ; 5.507      ;
; -5.132 ; frac2[0]  ; thex0[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.403      ; 5.646      ;
; -5.131 ; frac1[4]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.280      ; 5.509      ;
; -5.131 ; frac1[2]  ; LEDG[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.169      ; 5.443      ;
; -5.130 ; frac2[5]  ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.403      ; 5.618      ;
; -5.129 ; frac1[2]  ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.231      ; 5.460      ;
; -5.128 ; frac1[7]  ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.262      ; 5.503      ;
; -5.126 ; frac1[6]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.257      ; 5.481      ;
; -5.121 ; frac1[5]  ; LEDG[3]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.203      ; 5.467      ;
; -5.120 ; frac1[2]  ; LEDG[0]$latch ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.230      ; 5.461      ;
; -5.119 ; frac1[5]  ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.500        ; 0.265      ; 5.484      ;
+--------+-----------+---------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'KEY[0]'                                                                        ;
+-------+-----------+---------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node ; To Node ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------+---------+--------------+-------------+--------------+------------+------------+
; 0.466 ; tmp[2]    ; tmp[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 0.566      ;
; 0.525 ; tmp[1]    ; tmp[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 0.507      ;
; 0.531 ; tmp[1]    ; tmp[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 0.501      ;
; 0.596 ; tmp[2]    ; tmp[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 0.436      ;
; 0.665 ; tmp[2]    ; tmp[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; tmp[1]    ; tmp[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 0.367      ;
; 1.701 ; tmp[0]    ; tmp[2]  ; tmp[0]       ; KEY[0]      ; 0.500        ; 1.614      ; 0.586      ;
; 1.702 ; tmp[0]    ; tmp[1]  ; tmp[0]       ; KEY[0]      ; 0.500        ; 1.614      ; 0.585      ;
; 1.920 ; tmp[0]    ; tmp[0]  ; tmp[0]       ; KEY[0]      ; 0.500        ; 1.614      ; 0.367      ;
; 2.201 ; tmp[0]    ; tmp[2]  ; tmp[0]       ; KEY[0]      ; 1.000        ; 1.614      ; 0.586      ;
; 2.202 ; tmp[0]    ; tmp[1]  ; tmp[0]       ; KEY[0]      ; 1.000        ; 1.614      ; 0.585      ;
; 2.420 ; tmp[0]    ; tmp[0]  ; tmp[0]       ; KEY[0]      ; 1.000        ; 1.614      ; 0.367      ;
+-------+-----------+---------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'KEY[0]'                                                                          ;
+--------+-----------+---------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------+--------------+-------------+--------------+------------+------------+
; -1.540 ; tmp[0]    ; tmp[0]  ; tmp[0]       ; KEY[0]      ; 0.000        ; 1.614      ; 0.367      ;
; -1.322 ; tmp[0]    ; tmp[1]  ; tmp[0]       ; KEY[0]      ; 0.000        ; 1.614      ; 0.585      ;
; -1.321 ; tmp[0]    ; tmp[2]  ; tmp[0]       ; KEY[0]      ; 0.000        ; 1.614      ; 0.586      ;
; -1.040 ; tmp[0]    ; tmp[0]  ; tmp[0]       ; KEY[0]      ; -0.500       ; 1.614      ; 0.367      ;
; -0.822 ; tmp[0]    ; tmp[1]  ; tmp[0]       ; KEY[0]      ; -0.500       ; 1.614      ; 0.585      ;
; -0.821 ; tmp[0]    ; tmp[2]  ; tmp[0]       ; KEY[0]      ; -0.500       ; 1.614      ; 0.586      ;
; 0.215  ; tmp[1]    ; tmp[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; tmp[2]    ; tmp[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.367      ;
; 0.284  ; tmp[2]    ; tmp[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.436      ;
; 0.349  ; tmp[1]    ; tmp[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.501      ;
; 0.355  ; tmp[1]    ; tmp[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.507      ;
; 0.414  ; tmp[2]    ; tmp[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.566      ;
+--------+-----------+---------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'tmp[0]'                                                                                ;
+--------+-----------+---------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node ; To Node       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------+---------------+--------------+-------------+--------------+------------+------------+
; -1.326 ; tmp[0]    ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.382      ; 1.197      ;
; -1.322 ; tmp[0]    ; thex0[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.381      ; 1.200      ;
; -1.318 ; tmp[0]    ; thex0[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.382      ; 1.205      ;
; -1.316 ; tmp[0]    ; thex0[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.382      ; 1.207      ;
; -1.297 ; tmp[0]    ; sign_show     ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.337      ; 1.181      ;
; -1.213 ; tmp[0]    ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.330      ; 1.258      ;
; -1.122 ; tmp[0]    ; thex2[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.351      ; 1.370      ;
; -1.122 ; tmp[0]    ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.353      ; 1.372      ;
; -1.092 ; tmp[0]    ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.352      ; 1.401      ;
; -1.054 ; tmp[0]    ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.327      ; 1.414      ;
; -1.038 ; tmp[0]    ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.318      ; 1.421      ;
; -1.020 ; tmp[0]    ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.326      ; 1.447      ;
; -0.999 ; tmp[0]    ; thex2[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 2.334      ; 1.476      ;
; -0.826 ; tmp[0]    ; thex0[3]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.382      ; 1.197      ;
; -0.822 ; tmp[0]    ; thex0[1]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.381      ; 1.200      ;
; -0.818 ; tmp[0]    ; thex0[0]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.382      ; 1.205      ;
; -0.816 ; tmp[0]    ; thex0[2]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.382      ; 1.207      ;
; -0.797 ; tmp[0]    ; sign_show     ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.337      ; 1.181      ;
; -0.713 ; tmp[0]    ; thex1[3]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.330      ; 1.258      ;
; -0.622 ; tmp[0]    ; thex2[0]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.351      ; 1.370      ;
; -0.622 ; tmp[0]    ; thex1[2]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.353      ; 1.372      ;
; -0.592 ; tmp[0]    ; thex2[2]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.352      ; 1.401      ;
; -0.554 ; tmp[0]    ; thex1[1]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.327      ; 1.414      ;
; -0.538 ; tmp[0]    ; thex2[3]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.318      ; 1.421      ;
; -0.520 ; tmp[0]    ; thex1[0]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.326      ; 1.447      ;
; -0.499 ; tmp[0]    ; thex2[1]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 2.334      ; 1.476      ;
; 0.125  ; tmp[2]    ; LEDR[0]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.709      ; 0.834      ;
; 0.131  ; tmp[2]    ; LEDR[3]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.712      ; 0.843      ;
; 0.132  ; tmp[2]    ; LEDG[0]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.711      ; 0.843      ;
; 0.177  ; tmp[2]    ; LEDR[1]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.703      ; 0.880      ;
; 0.183  ; tmp[2]    ; LEDR[2]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.703      ; 0.886      ;
; 0.271  ; tmp[2]    ; LEDG[1]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.711      ; 0.982      ;
; 0.306  ; tmp[2]    ; LEDR[4]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.645      ; 0.951      ;
; 0.308  ; frac2[5]  ; thex2[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.355      ; 0.663      ;
; 0.315  ; tmp[2]    ; LEDG[2]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.697      ; 1.012      ;
; 0.325  ; tmp[2]    ; LEDG[6]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.709      ; 1.034      ;
; 0.374  ; sign1     ; sign_show     ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.366      ; 0.740      ;
; 0.376  ; tmp[2]    ; LEDG[5]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.656      ; 1.032      ;
; 0.380  ; tmp[2]    ; LEDG[4]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.655      ; 1.035      ;
; 0.382  ; tmp[2]    ; sign_show     ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.723      ; 1.105      ;
; 0.410  ; tmp[1]    ; sign_show     ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.723      ; 1.133      ;
; 0.444  ; tmp[2]    ; LEDG[7]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.650      ; 1.094      ;
; 0.455  ; tmp[2]    ; thex1[3]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.716      ; 1.171      ;
; 0.457  ; tmp[2]    ; LEDG[3]$latch ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.650      ; 1.107      ;
; 0.461  ; frac2[4]  ; thex2[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.377      ; 0.838      ;
; 0.463  ; frac2[7]  ; thex2[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.339      ; 0.802      ;
; 0.471  ; frac2[1]  ; thex1[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.347      ; 0.818      ;
; 0.496  ; frac2[2]  ; thex1[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.374      ; 0.870      ;
; 0.527  ; frac2[0]  ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.347      ; 0.874      ;
; 0.538  ; sign1     ; LEDR[4]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.288      ; 0.826      ;
; 0.546  ; tmp[2]    ; thex2[0]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.737      ; 1.283      ;
; 0.546  ; tmp[2]    ; thex1[2]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.739      ; 1.285      ;
; 0.553  ; tmp[1]    ; thex1[3]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.716      ; 1.269      ;
; 0.576  ; tmp[2]    ; thex2[2]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.738      ; 1.314      ;
; 0.578  ; frac2[3]  ; thex1[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.349      ; 0.927      ;
; 0.579  ; tmp[2]    ; thex2[3]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.704      ; 1.283      ;
; 0.606  ; exp2[3]   ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.335      ; 0.941      ;
; 0.610  ; tmp[1]    ; thex1[2]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.739      ; 1.349      ;
; 0.614  ; tmp[2]    ; thex1[1]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.713      ; 1.327      ;
; 0.616  ; tmp[1]    ; thex2[3]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.704      ; 1.320      ;
; 0.617  ; exp2[0]   ; thex0[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.348      ; 0.965      ;
; 0.636  ; tmp[2]    ; thex2[1]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.720      ; 1.356      ;
; 0.644  ; tmp[1]    ; thex2[0]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.737      ; 1.381      ;
; 0.648  ; tmp[2]    ; thex1[0]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.712      ; 1.360      ;
; 0.672  ; tmp[1]    ; thex2[1]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.720      ; 1.392      ;
; 0.672  ; tmp[2]    ; thex0[3]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 0.768      ; 0.940      ;
; 0.674  ; tmp[1]    ; thex2[2]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.738      ; 1.412      ;
; 0.675  ; exp2[1]   ; thex0[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.332      ; 1.007      ;
; 0.676  ; tmp[2]    ; thex0[1]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 0.767      ; 0.943      ;
; 0.701  ; frac2[6]  ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.370      ; 1.071      ;
; 0.707  ; tmp[2]    ; thex0[0]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 0.768      ; 0.975      ;
; 0.712  ; tmp[1]    ; thex1[1]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.713      ; 1.425      ;
; 0.712  ; tmp[1]    ; thex1[0]      ; KEY[0]       ; tmp[0]      ; 0.000        ; 0.712      ; 1.424      ;
; 0.782  ; tmp[2]    ; thex0[2]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 0.768      ; 1.050      ;
; 0.848  ; tmp[1]    ; thex0[3]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 0.768      ; 1.116      ;
; 0.852  ; tmp[1]    ; thex0[1]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 0.767      ; 1.119      ;
; 0.856  ; tmp[1]    ; thex0[0]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 0.768      ; 1.124      ;
; 0.858  ; tmp[1]    ; thex0[2]      ; KEY[0]       ; tmp[0]      ; -0.500       ; 0.768      ; 1.126      ;
; 0.871  ; sign1     ; LEDG[6]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.352      ; 1.223      ;
; 0.934  ; exp2[2]   ; thex0[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.334      ; 1.268      ;
; 0.976  ; exp1[1]   ; LEDR[1]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.352      ; 1.328      ;
; 1.027  ; sign1     ; thex2[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.363      ; 1.390      ;
; 1.033  ; exp1[1]   ; thex0[1]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.416      ; 0.949      ;
; 1.041  ; sign1     ; thex1[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.355      ; 1.396      ;
; 1.043  ; sign1     ; LEDG[0]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.354      ; 1.397      ;
; 1.072  ; sign1     ; thex2[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.380      ; 1.452      ;
; 1.072  ; sign2     ; sign_show     ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.298      ; 0.870      ;
; 1.100  ; exp1[3]   ; LEDR[4]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.233      ; 1.333      ;
; 1.105  ; sign1     ; thex2[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.381      ; 1.486      ;
; 1.119  ; exp1[1]   ; LEDR[4]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.294      ; 1.413      ;
; 1.124  ; sign2     ; thex0[0]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.343      ; 1.467      ;
; 1.135  ; sign1     ; LEDR[0]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.352      ; 1.487      ;
; 1.138  ; sign1     ; LEDG[4]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.298      ; 1.436      ;
; 1.140  ; sign1     ; LEDG[5]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.299      ; 1.439      ;
; 1.143  ; sign2     ; thex0[2]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.343      ; 1.486      ;
; 1.180  ; exp1[3]   ; thex0[3]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.356      ; 1.036      ;
; 1.184  ; sign1     ; LEDG[7]$latch ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.293      ; 1.477      ;
; 1.184  ; sign2     ; thex0[1]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.342      ; 1.526      ;
; 1.202  ; exp1[0]   ; thex0[0]      ; tmp[0]       ; tmp[0]      ; -0.500       ; 0.355      ; 1.057      ;
; 1.208  ; exp2[0]   ; thex0[3]      ; tmp[0]       ; tmp[0]      ; 0.000        ; 0.348      ; 1.556      ;
+--------+-----------+---------------+--------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'KEY[0]'                                                         ;
+--------+--------------+----------------+------------------+--------+------------+----------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target         ;
+--------+--------------+----------------+------------------+--------+------------+----------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; KEY[0] ; Rise       ; KEY[0]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[0]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[0]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[1]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[1]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[2]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[2]         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; KEY[0] ; Rise       ; KEY[0]|combout ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; KEY[0]|combout ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[0]|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[0]|clk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[1]|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[1]|clk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; KEY[0] ; Rise       ; tmp[2]|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; tmp[2]|clk     ;
+--------+--------------+----------------+------------------+--------+------------+----------------+


+----------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'tmp[0]'                                                                 ;
+-------+--------------+----------------+------------------+--------+------------+-------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target                  ;
+-------+--------------+----------------+------------------+--------+------------+-------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[3]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[3]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[3]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[3]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[4]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[4]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[4]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[4]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[5]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[5]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[5]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[5]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[6]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[6]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[6]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[6]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[7]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[7]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDG[7]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDG[7]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[3]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[3]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[3]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[3]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[4]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[4]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; LEDR[4]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; LEDR[4]$latch|datad     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux37~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux37~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux37~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux37~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux37~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux37~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux37~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux37~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux48~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux48~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux48~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux48~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux48~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux48~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux48~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux48~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~2clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~2clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~2clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~2clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~2|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~2|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~3clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~3clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~3clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~3clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Fall       ; Mux54~3|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Fall       ; Mux54~3|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; tmp[0] ; Rise       ; Mux54~3|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; tmp[0] ; Rise       ; Mux54~3|datac           ;
+-------+--------------+----------------+------------------+--------+------------+-------------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; tmp[0]     ; 0.551  ; 0.551  ; Rise       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 0.348  ; 0.348  ; Rise       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 0.387  ; 0.387  ; Rise       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 0.551  ; 0.551  ; Rise       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 0.237  ; 0.237  ; Rise       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; -0.033 ; -0.033 ; Rise       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 0.068  ; 0.068  ; Rise       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; 0.106  ; 0.106  ; Rise       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; -0.132 ; -0.132 ; Rise       ; tmp[0]          ;
; SW[*]     ; tmp[0]     ; 0.077  ; 0.077  ; Fall       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 0.037  ; 0.037  ; Fall       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; -0.055 ; -0.055 ; Fall       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 0.077  ; 0.077  ; Fall       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; -0.344 ; -0.344 ; Fall       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; -0.319 ; -0.319 ; Fall       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; -0.330 ; -0.330 ; Fall       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; -0.428 ; -0.428 ; Fall       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; -0.384 ; -0.384 ; Fall       ; tmp[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Hold Times                                                            ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; SW[*]     ; tmp[0]     ; 0.849 ; 0.849 ; Rise       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 0.270 ; 0.270 ; Rise       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 0.532 ; 0.532 ; Rise       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 0.208 ; 0.208 ; Rise       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 0.816 ; 0.816 ; Rise       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; 0.849 ; 0.849 ; Rise       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 0.681 ; 0.681 ; Rise       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; 0.750 ; 0.750 ; Rise       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; 0.593 ; 0.593 ; Rise       ; tmp[0]          ;
; SW[*]     ; tmp[0]     ; 0.866 ; 0.866 ; Fall       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 0.447 ; 0.447 ; Fall       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 0.533 ; 0.533 ; Fall       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 0.488 ; 0.488 ; Fall       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 0.866 ; 0.866 ; Fall       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; 0.694 ; 0.694 ; Fall       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 0.680 ; 0.680 ; Fall       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; 0.790 ; 0.790 ; Fall       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; 0.671 ; 0.671 ; Fall       ; tmp[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; HEX1[*]   ; tmp[0]     ; 5.809 ; 5.809 ; Rise       ; tmp[0]          ;
;  HEX1[0]  ; tmp[0]     ; 5.789 ; 5.789 ; Rise       ; tmp[0]          ;
;  HEX1[1]  ; tmp[0]     ; 5.771 ; 5.771 ; Rise       ; tmp[0]          ;
;  HEX1[2]  ; tmp[0]     ; 5.788 ; 5.788 ; Rise       ; tmp[0]          ;
;  HEX1[3]  ; tmp[0]     ; 5.731 ; 5.731 ; Rise       ; tmp[0]          ;
;  HEX1[4]  ; tmp[0]     ; 5.789 ; 5.789 ; Rise       ; tmp[0]          ;
;  HEX1[5]  ; tmp[0]     ; 5.485 ; 5.485 ; Rise       ; tmp[0]          ;
;  HEX1[6]  ; tmp[0]     ; 5.809 ; 5.809 ; Rise       ; tmp[0]          ;
; HEX2[*]   ; tmp[0]     ; 6.327 ; 6.327 ; Rise       ; tmp[0]          ;
;  HEX2[0]  ; tmp[0]     ; 5.910 ; 5.910 ; Rise       ; tmp[0]          ;
;  HEX2[1]  ; tmp[0]     ; 5.938 ; 5.938 ; Rise       ; tmp[0]          ;
;  HEX2[2]  ; tmp[0]     ; 6.076 ; 6.076 ; Rise       ; tmp[0]          ;
;  HEX2[3]  ; tmp[0]     ; 6.092 ; 6.092 ; Rise       ; tmp[0]          ;
;  HEX2[4]  ; tmp[0]     ; 6.327 ; 6.327 ; Rise       ; tmp[0]          ;
;  HEX2[5]  ; tmp[0]     ; 6.107 ; 6.107 ; Rise       ; tmp[0]          ;
;  HEX2[6]  ; tmp[0]     ; 5.708 ; 5.708 ; Rise       ; tmp[0]          ;
; HEX3[*]   ; tmp[0]     ; 5.496 ; 5.496 ; Rise       ; tmp[0]          ;
;  HEX3[6]  ; tmp[0]     ; 5.496 ; 5.496 ; Rise       ; tmp[0]          ;
; LEDG[*]   ; tmp[0]     ; 5.366 ; 5.366 ; Rise       ; tmp[0]          ;
;  LEDG[0]  ; tmp[0]     ; 4.814 ; 4.814 ; Rise       ; tmp[0]          ;
;  LEDG[1]  ; tmp[0]     ; 4.912 ; 4.912 ; Rise       ; tmp[0]          ;
;  LEDG[2]  ; tmp[0]     ; 5.077 ; 5.077 ; Rise       ; tmp[0]          ;
;  LEDG[3]  ; tmp[0]     ; 4.922 ; 4.922 ; Rise       ; tmp[0]          ;
;  LEDG[4]  ; tmp[0]     ; 5.366 ; 5.366 ; Rise       ; tmp[0]          ;
;  LEDG[5]  ; tmp[0]     ; 4.903 ; 4.903 ; Rise       ; tmp[0]          ;
;  LEDG[6]  ; tmp[0]     ; 5.129 ; 5.129 ; Rise       ; tmp[0]          ;
;  LEDG[7]  ; tmp[0]     ; 5.200 ; 5.200 ; Rise       ; tmp[0]          ;
; LEDR[*]   ; tmp[0]     ; 5.209 ; 5.209 ; Rise       ; tmp[0]          ;
;  LEDR[0]  ; tmp[0]     ; 5.071 ; 5.071 ; Rise       ; tmp[0]          ;
;  LEDR[1]  ; tmp[0]     ; 5.016 ; 5.016 ; Rise       ; tmp[0]          ;
;  LEDR[2]  ; tmp[0]     ; 5.209 ; 5.209 ; Rise       ; tmp[0]          ;
;  LEDR[3]  ; tmp[0]     ; 4.963 ; 4.963 ; Rise       ; tmp[0]          ;
;  LEDR[4]  ; tmp[0]     ; 5.153 ; 5.153 ; Rise       ; tmp[0]          ;
; HEX0[*]   ; tmp[0]     ; 6.052 ; 6.052 ; Fall       ; tmp[0]          ;
;  HEX0[0]  ; tmp[0]     ; 5.454 ; 5.454 ; Fall       ; tmp[0]          ;
;  HEX0[1]  ; tmp[0]     ; 5.864 ; 5.864 ; Fall       ; tmp[0]          ;
;  HEX0[2]  ; tmp[0]     ; 5.817 ; 5.817 ; Fall       ; tmp[0]          ;
;  HEX0[3]  ; tmp[0]     ; 6.052 ; 6.052 ; Fall       ; tmp[0]          ;
;  HEX0[4]  ; tmp[0]     ; 5.937 ; 5.937 ; Fall       ; tmp[0]          ;
;  HEX0[5]  ; tmp[0]     ; 5.819 ; 5.819 ; Fall       ; tmp[0]          ;
;  HEX0[6]  ; tmp[0]     ; 5.905 ; 5.905 ; Fall       ; tmp[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; HEX1[*]   ; tmp[0]     ; 5.192 ; 5.192 ; Rise       ; tmp[0]          ;
;  HEX1[0]  ; tmp[0]     ; 5.505 ; 5.505 ; Rise       ; tmp[0]          ;
;  HEX1[1]  ; tmp[0]     ; 5.487 ; 5.487 ; Rise       ; tmp[0]          ;
;  HEX1[2]  ; tmp[0]     ; 5.496 ; 5.496 ; Rise       ; tmp[0]          ;
;  HEX1[3]  ; tmp[0]     ; 5.442 ; 5.442 ; Rise       ; tmp[0]          ;
;  HEX1[4]  ; tmp[0]     ; 5.503 ; 5.503 ; Rise       ; tmp[0]          ;
;  HEX1[5]  ; tmp[0]     ; 5.192 ; 5.192 ; Rise       ; tmp[0]          ;
;  HEX1[6]  ; tmp[0]     ; 5.520 ; 5.520 ; Rise       ; tmp[0]          ;
; HEX2[*]   ; tmp[0]     ; 5.464 ; 5.464 ; Rise       ; tmp[0]          ;
;  HEX2[0]  ; tmp[0]     ; 5.666 ; 5.666 ; Rise       ; tmp[0]          ;
;  HEX2[1]  ; tmp[0]     ; 5.696 ; 5.696 ; Rise       ; tmp[0]          ;
;  HEX2[2]  ; tmp[0]     ; 5.836 ; 5.836 ; Rise       ; tmp[0]          ;
;  HEX2[3]  ; tmp[0]     ; 5.849 ; 5.849 ; Rise       ; tmp[0]          ;
;  HEX2[4]  ; tmp[0]     ; 6.082 ; 6.082 ; Rise       ; tmp[0]          ;
;  HEX2[5]  ; tmp[0]     ; 5.863 ; 5.863 ; Rise       ; tmp[0]          ;
;  HEX2[6]  ; tmp[0]     ; 5.464 ; 5.464 ; Rise       ; tmp[0]          ;
; HEX3[*]   ; tmp[0]     ; 5.496 ; 5.496 ; Rise       ; tmp[0]          ;
;  HEX3[6]  ; tmp[0]     ; 5.496 ; 5.496 ; Rise       ; tmp[0]          ;
; LEDG[*]   ; tmp[0]     ; 4.814 ; 4.814 ; Rise       ; tmp[0]          ;
;  LEDG[0]  ; tmp[0]     ; 4.814 ; 4.814 ; Rise       ; tmp[0]          ;
;  LEDG[1]  ; tmp[0]     ; 4.912 ; 4.912 ; Rise       ; tmp[0]          ;
;  LEDG[2]  ; tmp[0]     ; 5.077 ; 5.077 ; Rise       ; tmp[0]          ;
;  LEDG[3]  ; tmp[0]     ; 4.922 ; 4.922 ; Rise       ; tmp[0]          ;
;  LEDG[4]  ; tmp[0]     ; 5.366 ; 5.366 ; Rise       ; tmp[0]          ;
;  LEDG[5]  ; tmp[0]     ; 4.903 ; 4.903 ; Rise       ; tmp[0]          ;
;  LEDG[6]  ; tmp[0]     ; 5.129 ; 5.129 ; Rise       ; tmp[0]          ;
;  LEDG[7]  ; tmp[0]     ; 5.200 ; 5.200 ; Rise       ; tmp[0]          ;
; LEDR[*]   ; tmp[0]     ; 4.963 ; 4.963 ; Rise       ; tmp[0]          ;
;  LEDR[0]  ; tmp[0]     ; 5.071 ; 5.071 ; Rise       ; tmp[0]          ;
;  LEDR[1]  ; tmp[0]     ; 5.016 ; 5.016 ; Rise       ; tmp[0]          ;
;  LEDR[2]  ; tmp[0]     ; 5.209 ; 5.209 ; Rise       ; tmp[0]          ;
;  LEDR[3]  ; tmp[0]     ; 4.963 ; 4.963 ; Rise       ; tmp[0]          ;
;  LEDR[4]  ; tmp[0]     ; 5.153 ; 5.153 ; Rise       ; tmp[0]          ;
; HEX0[*]   ; tmp[0]     ; 5.040 ; 5.040 ; Fall       ; tmp[0]          ;
;  HEX0[0]  ; tmp[0]     ; 5.040 ; 5.040 ; Fall       ; tmp[0]          ;
;  HEX0[1]  ; tmp[0]     ; 5.457 ; 5.457 ; Fall       ; tmp[0]          ;
;  HEX0[2]  ; tmp[0]     ; 5.414 ; 5.414 ; Fall       ; tmp[0]          ;
;  HEX0[3]  ; tmp[0]     ; 5.644 ; 5.644 ; Fall       ; tmp[0]          ;
;  HEX0[4]  ; tmp[0]     ; 5.528 ; 5.528 ; Fall       ; tmp[0]          ;
;  HEX0[5]  ; tmp[0]     ; 5.409 ; 5.409 ; Fall       ; tmp[0]          ;
;  HEX0[6]  ; tmp[0]     ; 5.501 ; 5.501 ; Fall       ; tmp[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                              ;
+------------------+----------+---------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+---------+----------+---------+---------------------+
; Worst-case Slack ; -15.758  ; -3.213  ; N/A      ; N/A     ; -1.469              ;
;  KEY[0]          ; -0.317   ; -3.213  ; N/A      ; N/A     ; -1.469              ;
;  tmp[0]          ; -15.758  ; -1.801  ; N/A      ; N/A     ; 0.500               ;
; Design-wide TNS  ; -379.954 ; -26.992 ; 0.0      ; 0.0     ; -5.135              ;
;  KEY[0]          ; -0.474   ; -8.331  ; N/A      ; N/A     ; -5.135              ;
;  tmp[0]          ; -379.480 ; -18.661 ; N/A      ; N/A     ; 0.000               ;
+------------------+----------+---------+----------+---------+---------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; tmp[0]     ; 2.473  ; 2.473  ; Rise       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 2.113  ; 2.113  ; Rise       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 2.150  ; 2.150  ; Rise       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 2.473  ; 2.473  ; Rise       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 1.820  ; 1.820  ; Rise       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; 1.255  ; 1.255  ; Rise       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 1.405  ; 1.405  ; Rise       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; 1.592  ; 1.592  ; Rise       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; 0.879  ; 0.879  ; Rise       ; tmp[0]          ;
; SW[*]     ; tmp[0]     ; 1.088  ; 1.088  ; Fall       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 0.986  ; 0.986  ; Fall       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 0.957  ; 0.957  ; Fall       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 1.088  ; 1.088  ; Fall       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 0.359  ; 0.359  ; Fall       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; 0.223  ; 0.223  ; Fall       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 0.230  ; 0.230  ; Fall       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; -0.009 ; -0.009 ; Fall       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; 0.031  ; 0.031  ; Fall       ; tmp[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Hold Times                                                            ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; SW[*]     ; tmp[0]     ; 1.345 ; 1.345 ; Rise       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 0.270 ; 0.270 ; Rise       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 0.694 ; 0.694 ; Rise       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 0.208 ; 0.208 ; Rise       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 1.275 ; 1.275 ; Rise       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; 1.345 ; 1.345 ; Rise       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 0.945 ; 0.945 ; Rise       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; 1.074 ; 1.074 ; Rise       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; 0.731 ; 0.731 ; Rise       ; tmp[0]          ;
; SW[*]     ; tmp[0]     ; 1.336 ; 1.336 ; Fall       ; tmp[0]          ;
;  SW[0]    ; tmp[0]     ; 0.447 ; 0.447 ; Fall       ; tmp[0]          ;
;  SW[1]    ; tmp[0]     ; 0.574 ; 0.574 ; Fall       ; tmp[0]          ;
;  SW[2]    ; tmp[0]     ; 0.488 ; 0.488 ; Fall       ; tmp[0]          ;
;  SW[3]    ; tmp[0]     ; 1.336 ; 1.336 ; Fall       ; tmp[0]          ;
;  SW[4]    ; tmp[0]     ; 0.803 ; 0.803 ; Fall       ; tmp[0]          ;
;  SW[5]    ; tmp[0]     ; 0.781 ; 0.781 ; Fall       ; tmp[0]          ;
;  SW[6]    ; tmp[0]     ; 1.070 ; 1.070 ; Fall       ; tmp[0]          ;
;  SW[7]    ; tmp[0]     ; 0.802 ; 0.802 ; Fall       ; tmp[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Clock to Output Times                                                   ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX1[*]   ; tmp[0]     ; 12.401 ; 12.401 ; Rise       ; tmp[0]          ;
;  HEX1[0]  ; tmp[0]     ; 12.372 ; 12.372 ; Rise       ; tmp[0]          ;
;  HEX1[1]  ; tmp[0]     ; 12.367 ; 12.367 ; Rise       ; tmp[0]          ;
;  HEX1[2]  ; tmp[0]     ; 12.364 ; 12.364 ; Rise       ; tmp[0]          ;
;  HEX1[3]  ; tmp[0]     ; 12.172 ; 12.172 ; Rise       ; tmp[0]          ;
;  HEX1[4]  ; tmp[0]     ; 12.386 ; 12.386 ; Rise       ; tmp[0]          ;
;  HEX1[5]  ; tmp[0]     ; 11.362 ; 11.362 ; Rise       ; tmp[0]          ;
;  HEX1[6]  ; tmp[0]     ; 12.401 ; 12.401 ; Rise       ; tmp[0]          ;
; HEX2[*]   ; tmp[0]     ; 13.491 ; 13.491 ; Rise       ; tmp[0]          ;
;  HEX2[0]  ; tmp[0]     ; 12.730 ; 12.730 ; Rise       ; tmp[0]          ;
;  HEX2[1]  ; tmp[0]     ; 12.728 ; 12.728 ; Rise       ; tmp[0]          ;
;  HEX2[2]  ; tmp[0]     ; 13.096 ; 13.096 ; Rise       ; tmp[0]          ;
;  HEX2[3]  ; tmp[0]     ; 13.131 ; 13.131 ; Rise       ; tmp[0]          ;
;  HEX2[4]  ; tmp[0]     ; 13.491 ; 13.491 ; Rise       ; tmp[0]          ;
;  HEX2[5]  ; tmp[0]     ; 13.170 ; 13.170 ; Rise       ; tmp[0]          ;
;  HEX2[6]  ; tmp[0]     ; 11.981 ; 11.981 ; Rise       ; tmp[0]          ;
; HEX3[*]   ; tmp[0]     ; 11.447 ; 11.447 ; Rise       ; tmp[0]          ;
;  HEX3[6]  ; tmp[0]     ; 11.447 ; 11.447 ; Rise       ; tmp[0]          ;
; LEDG[*]   ; tmp[0]     ; 10.868 ; 10.868 ; Rise       ; tmp[0]          ;
;  LEDG[0]  ; tmp[0]     ; 9.666  ; 9.666  ; Rise       ; tmp[0]          ;
;  LEDG[1]  ; tmp[0]     ; 9.937  ; 9.937  ; Rise       ; tmp[0]          ;
;  LEDG[2]  ; tmp[0]     ; 10.507 ; 10.507 ; Rise       ; tmp[0]          ;
;  LEDG[3]  ; tmp[0]     ; 9.888  ; 9.888  ; Rise       ; tmp[0]          ;
;  LEDG[4]  ; tmp[0]     ; 10.868 ; 10.868 ; Rise       ; tmp[0]          ;
;  LEDG[5]  ; tmp[0]     ; 9.851  ; 9.851  ; Rise       ; tmp[0]          ;
;  LEDG[6]  ; tmp[0]     ; 10.519 ; 10.519 ; Rise       ; tmp[0]          ;
;  LEDG[7]  ; tmp[0]     ; 10.673 ; 10.673 ; Rise       ; tmp[0]          ;
; LEDR[*]   ; tmp[0]     ; 10.845 ; 10.845 ; Rise       ; tmp[0]          ;
;  LEDR[0]  ; tmp[0]     ; 10.514 ; 10.514 ; Rise       ; tmp[0]          ;
;  LEDR[1]  ; tmp[0]     ; 10.428 ; 10.428 ; Rise       ; tmp[0]          ;
;  LEDR[2]  ; tmp[0]     ; 10.845 ; 10.845 ; Rise       ; tmp[0]          ;
;  LEDR[3]  ; tmp[0]     ; 10.023 ; 10.023 ; Rise       ; tmp[0]          ;
;  LEDR[4]  ; tmp[0]     ; 10.551 ; 10.551 ; Rise       ; tmp[0]          ;
; HEX0[*]   ; tmp[0]     ; 12.892 ; 12.892 ; Fall       ; tmp[0]          ;
;  HEX0[0]  ; tmp[0]     ; 11.361 ; 11.361 ; Fall       ; tmp[0]          ;
;  HEX0[1]  ; tmp[0]     ; 12.478 ; 12.478 ; Fall       ; tmp[0]          ;
;  HEX0[2]  ; tmp[0]     ; 12.276 ; 12.276 ; Fall       ; tmp[0]          ;
;  HEX0[3]  ; tmp[0]     ; 12.892 ; 12.892 ; Fall       ; tmp[0]          ;
;  HEX0[4]  ; tmp[0]     ; 12.745 ; 12.745 ; Fall       ; tmp[0]          ;
;  HEX0[5]  ; tmp[0]     ; 12.386 ; 12.386 ; Fall       ; tmp[0]          ;
;  HEX0[6]  ; tmp[0]     ; 12.551 ; 12.551 ; Fall       ; tmp[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; HEX1[*]   ; tmp[0]     ; 5.192 ; 5.192 ; Rise       ; tmp[0]          ;
;  HEX1[0]  ; tmp[0]     ; 5.505 ; 5.505 ; Rise       ; tmp[0]          ;
;  HEX1[1]  ; tmp[0]     ; 5.487 ; 5.487 ; Rise       ; tmp[0]          ;
;  HEX1[2]  ; tmp[0]     ; 5.496 ; 5.496 ; Rise       ; tmp[0]          ;
;  HEX1[3]  ; tmp[0]     ; 5.442 ; 5.442 ; Rise       ; tmp[0]          ;
;  HEX1[4]  ; tmp[0]     ; 5.503 ; 5.503 ; Rise       ; tmp[0]          ;
;  HEX1[5]  ; tmp[0]     ; 5.192 ; 5.192 ; Rise       ; tmp[0]          ;
;  HEX1[6]  ; tmp[0]     ; 5.520 ; 5.520 ; Rise       ; tmp[0]          ;
; HEX2[*]   ; tmp[0]     ; 5.464 ; 5.464 ; Rise       ; tmp[0]          ;
;  HEX2[0]  ; tmp[0]     ; 5.666 ; 5.666 ; Rise       ; tmp[0]          ;
;  HEX2[1]  ; tmp[0]     ; 5.696 ; 5.696 ; Rise       ; tmp[0]          ;
;  HEX2[2]  ; tmp[0]     ; 5.836 ; 5.836 ; Rise       ; tmp[0]          ;
;  HEX2[3]  ; tmp[0]     ; 5.849 ; 5.849 ; Rise       ; tmp[0]          ;
;  HEX2[4]  ; tmp[0]     ; 6.082 ; 6.082 ; Rise       ; tmp[0]          ;
;  HEX2[5]  ; tmp[0]     ; 5.863 ; 5.863 ; Rise       ; tmp[0]          ;
;  HEX2[6]  ; tmp[0]     ; 5.464 ; 5.464 ; Rise       ; tmp[0]          ;
; HEX3[*]   ; tmp[0]     ; 5.496 ; 5.496 ; Rise       ; tmp[0]          ;
;  HEX3[6]  ; tmp[0]     ; 5.496 ; 5.496 ; Rise       ; tmp[0]          ;
; LEDG[*]   ; tmp[0]     ; 4.814 ; 4.814 ; Rise       ; tmp[0]          ;
;  LEDG[0]  ; tmp[0]     ; 4.814 ; 4.814 ; Rise       ; tmp[0]          ;
;  LEDG[1]  ; tmp[0]     ; 4.912 ; 4.912 ; Rise       ; tmp[0]          ;
;  LEDG[2]  ; tmp[0]     ; 5.077 ; 5.077 ; Rise       ; tmp[0]          ;
;  LEDG[3]  ; tmp[0]     ; 4.922 ; 4.922 ; Rise       ; tmp[0]          ;
;  LEDG[4]  ; tmp[0]     ; 5.366 ; 5.366 ; Rise       ; tmp[0]          ;
;  LEDG[5]  ; tmp[0]     ; 4.903 ; 4.903 ; Rise       ; tmp[0]          ;
;  LEDG[6]  ; tmp[0]     ; 5.129 ; 5.129 ; Rise       ; tmp[0]          ;
;  LEDG[7]  ; tmp[0]     ; 5.200 ; 5.200 ; Rise       ; tmp[0]          ;
; LEDR[*]   ; tmp[0]     ; 4.963 ; 4.963 ; Rise       ; tmp[0]          ;
;  LEDR[0]  ; tmp[0]     ; 5.071 ; 5.071 ; Rise       ; tmp[0]          ;
;  LEDR[1]  ; tmp[0]     ; 5.016 ; 5.016 ; Rise       ; tmp[0]          ;
;  LEDR[2]  ; tmp[0]     ; 5.209 ; 5.209 ; Rise       ; tmp[0]          ;
;  LEDR[3]  ; tmp[0]     ; 4.963 ; 4.963 ; Rise       ; tmp[0]          ;
;  LEDR[4]  ; tmp[0]     ; 5.153 ; 5.153 ; Rise       ; tmp[0]          ;
; HEX0[*]   ; tmp[0]     ; 5.040 ; 5.040 ; Fall       ; tmp[0]          ;
;  HEX0[0]  ; tmp[0]     ; 5.040 ; 5.040 ; Fall       ; tmp[0]          ;
;  HEX0[1]  ; tmp[0]     ; 5.457 ; 5.457 ; Fall       ; tmp[0]          ;
;  HEX0[2]  ; tmp[0]     ; 5.414 ; 5.414 ; Fall       ; tmp[0]          ;
;  HEX0[3]  ; tmp[0]     ; 5.644 ; 5.644 ; Fall       ; tmp[0]          ;
;  HEX0[4]  ; tmp[0]     ; 5.528 ; 5.528 ; Fall       ; tmp[0]          ;
;  HEX0[5]  ; tmp[0]     ; 5.409 ; 5.409 ; Fall       ; tmp[0]          ;
;  HEX0[6]  ; tmp[0]     ; 5.501 ; 5.501 ; Fall       ; tmp[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; KEY[0]     ; KEY[0]   ; 6        ; 0        ; 0        ; 0        ;
; tmp[0]     ; KEY[0]   ; 3        ; 3        ; 0        ; 0        ;
; KEY[0]     ; tmp[0]   ; 69       ; 0        ; 20       ; 0        ;
; tmp[0]     ; tmp[0]   ; 3635341  ; 3635341  ; 541349   ; 541349   ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; KEY[0]     ; KEY[0]   ; 6        ; 0        ; 0        ; 0        ;
; tmp[0]     ; KEY[0]   ; 3        ; 3        ; 0        ; 0        ;
; KEY[0]     ; tmp[0]   ; 69       ; 0        ; 20       ; 0        ;
; tmp[0]     ; tmp[0]   ; 3635341  ; 3635341  ; 541349   ; 541349   ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 9     ; 9    ;
; Unconstrained Input Port Paths  ; 42    ; 42   ;
; Unconstrained Output Ports      ; 35    ; 35   ;
; Unconstrained Output Port Paths ; 98    ; 98   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Thu Aug 15 18:26:47 2019
Info: Command: quartus_sta SomadorFlutuante -c SomadorFlutuante
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 52 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'SomadorFlutuante.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name tmp[0] tmp[0]
    Info (332105): create_clock -period 1.000 -name KEY[0] KEY[0]
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux48~0  from: datac  to: combout
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -15.758
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):   -15.758      -379.480 tmp[0] 
    Info (332119):    -0.317        -0.474 KEY[0] 
Info (332146): Worst-case hold slack is -3.213
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.213        -8.331 KEY[0] 
    Info (332119):    -1.801       -18.661 tmp[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.469
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.469        -5.135 KEY[0] 
    Info (332119):     0.500         0.000 tmp[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux48~0  from: datac  to: combout
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -5.390
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -5.390      -128.841 tmp[0] 
    Info (332119):     0.466         0.000 KEY[0] 
Info (332146): Worst-case hold slack is -1.540
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.540        -4.183 KEY[0] 
    Info (332119):    -1.326       -15.239 tmp[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222        -4.222 KEY[0] 
    Info (332119):     0.500         0.000 tmp[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 401 megabytes
    Info: Processing ended: Thu Aug 15 18:26:48 2019
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


